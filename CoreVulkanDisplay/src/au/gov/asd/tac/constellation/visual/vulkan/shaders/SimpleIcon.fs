#version 450


// === UNIFORMS ===
// Note this is an opaque uniform, ie not data we pass in but an object this shader can reference.  This 
// array image is generated by CVKIconTextureAtlas.
layout(binding = 1) uniform sampler2DArray images;


// === PER FRAGMENT DATA IN ===
layout(location = 0) flat in mat4 iconColor;
layout(location = 4) noperspective centroid in vec3 textureCoords;


// === PER FRAGMENT DATA OUT ===
layout(location = 0) out vec4 fragColor;


void main(void) {
    fragColor = iconColor * texture(images, textureCoords);

    // Discarding only when fragColor.a==0.0 means that some "nearly transparent" pixels get drawn, which causes weird see-through
    // artifacts around the edges. Instead we'll discard nearly transparent pixels as well at an arbitrary cut-off point.
    if(fragColor.a < 0.1) {
        discard;
    }
}
